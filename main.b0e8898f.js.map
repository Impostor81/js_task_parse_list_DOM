{"version":3,"sources":["scripts/main.js"],"names":["listLi","document","querySelectorAll","ulItem","querySelector","sortList","list","sort","a","b","dataset","salary","replace","sorted","item","append","getEmployees","map","person","name","innerText","position","age"],"mappings":";AAAA,aA2BA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAzBA,IAyBA,EAzBMA,EAASC,SAASC,iBAAiB,MACnCC,EAASF,SAASG,cAAc,MAEhCC,EAAW,SAAAC,GACR,OAAA,EAAIA,GAAMC,KAAK,SAACC,EAAGC,GACxB,OAACA,EAAEC,QAAQC,OAAOC,QAAQ,OAAQ,KAC/BJ,EAAEE,QAAQC,OAAOC,QAAQ,OAAQ,OAGlCC,EAASR,EAASL,GAELa,EAAAA,EAAAA,GAcnB,IAd2B,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAhBC,IAAAA,EAAgB,EAAA,MACzBX,EAAOY,OAAOD,IAahB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAVA,IAAME,EAAe,SAAAV,GACZ,OAAA,EAAIA,GAAMW,IAAI,SAAAC,GAAW,MAAA,CAC9BC,KAAMD,EAAOE,UACbC,SAAUH,EAAOR,QAAQW,SACzBV,OAAQO,EAAOR,QAAQC,OACvBW,IAAKJ,EAAOR,QAAQY,QAIxBjB,EAASL,GACTgB,EAAahB","file":"main.b0e8898f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst listLi = document.querySelectorAll('li');\nconst ulItem = document.querySelector('ul');\n\nconst sortList = list => {\n  return [...list].sort((a, b) =>\n    +b.dataset.salary.replace(/[$,]/, '')\n    - +a.dataset.salary.replace(/[$,]/, ''));\n};\n\nconst sorted = sortList(listLi);\n\nfor (const item of sorted) {\n  ulItem.append(item);\n}\n\nconst getEmployees = list => {\n  return [...list].map(person => ({\n    name: person.innerText,\n    position: person.dataset.position,\n    salary: person.dataset.salary,\n    age: person.dataset.age,\n  }));\n};\n\nsortList(listLi);\ngetEmployees(listLi);\n"]}